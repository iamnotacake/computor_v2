use crate::Expr;

grammar;

pub AddSub: Expr = {
    <x:AddSub> "+" <y:MulDiv> => Expr::Add(box x, box y),
    <x:AddSub> "-" <y:MulDiv> => Expr::Add(box x, box Expr::Neg(box y)),
    MulDiv,
}

pub MulDiv: Expr = {
    <x:MulDiv> "*" <y:Pow> => Expr::Mul(box x, box y),
    <x:MulDiv> "/" <y:Pow> => Expr::Div(box x, box y),
    Pow,
}

pub Pow: Expr = {
    <x:Pow> "^" <y:Term> => Expr::Pow(box x, box y),
    Term,
}

pub Term: Expr = {
    Real,
    Var,
    "(" <AddSub> ")",
    Neg,
}

pub Neg: Expr = {
    "-" <x:Term> => Expr::Neg(box x),
}

pub Real: Expr = {
    <x:r"[0-9]+(\.[0-9]+)?"> => Expr::Real(x.parse().unwrap()),
}

pub Var: Expr = {
    <x:r"[a-zA-Z][a-zA-Z0-9]*"> => Expr::Var(x.to_string()),
}
